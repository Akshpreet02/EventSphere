syntax = "proto3";

package EventSphere;

// Import the necessary types for timestamps
import "google/protobuf/timestamp.proto";

// The service definition
service EventService {
    // Registration of a new customer
    rpc RegisterCustomer (CustomerRegistrationRequest) returns (CustomerRegistrationResponse) {}
    
    // Registration of a new event poster
    rpc RegisterEventPoster (EventPosterRegistrationRequest) returns (EventPosterRegistrationResponse) {}
    
    // Posting a new event
    rpc PostEvent (PostEventRequest) returns (PostEventResponse) {}
    
    // Fetching events
    rpc FetchEvents (FetchEventsRequest) returns (stream Event) {}
    
    // Editing an event
    rpc EditEvent (EditEventRequest) returns (EditEventResponse) {}
    
    // Deleting an event
    rpc DeleteEvent (DeleteEventRequest) returns (DeleteEventResponse) {}

    rpc FetchUsers (FetchUsersRequest) returns (FetchUsersResponse) {}
}

// Request and response message
message FetchUsersRequest {
    // This request is intentionally left empty to illustrate
    // the flexibility of extending the API in the future.
}

message Users {
    string id = 1;
    string username = 2;
    string email = 3;
    string full_name = 4;
    string role = 5;
}
  
  
message FetchUsersResponse {
    repeated Users users = 1; // Repeated field for a list of users
}

message CustomerRegistrationRequest {
    string username = 1;
    string password = 2;
    string email = 3;
    string full_name = 4;
    string role = 5; 
}

message CustomerRegistrationResponse {
    string message = 1;
}

message EventPosterRegistrationRequest {
    string username = 1;
    string password = 2;
    string email = 3;
    string full_name = 4;
    string role = 5; 
}

message EventPosterRegistrationResponse {
    string message = 1;
}

message PostEventRequest {
    string event_name = 1;
    string description = 2;
    google.protobuf.Timestamp start_date = 3;
    google.protobuf.Timestamp end_date = 4;
    string venue = 5;
    string organizer = 6; 
}

message PostEventResponse {
    string message = 1;
}

message FetchEventsRequest {
    string filter = 1;
    string value = 2;
}

message Event {
    string id = 1;
    string event_name = 2;
    string description = 3;
    google.protobuf.Timestamp start_date = 4;
    google.protobuf.Timestamp end_date = 5;
    string venue = 6;
    string organizer = 7;
    string status = 8;
    
}

message EditEventRequest {
    string event_id = 1;
    string event_name = 2;
    string description = 3;
    google.protobuf.Timestamp start_date = 4;
    google.protobuf.Timestamp end_date = 5;
    string venue = 6;
    string status = 7;
}

message EditEventResponse {
    string message = 1;
}

message DeleteEventRequest {
    string event_id = 1;
}

message DeleteEventResponse {
    string message = 1;
}
